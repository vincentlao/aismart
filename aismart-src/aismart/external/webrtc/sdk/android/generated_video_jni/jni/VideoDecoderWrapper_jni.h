// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/webrtc/VideoDecoderWrapper

#ifndef org_webrtc_VideoDecoderWrapper_JNI
#define org_webrtc_VideoDecoderWrapper_JNI

#include "sdk/android/src/jni/jni_generator_helper.h"

// Step 1: forward declarations.
JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_webrtc_VideoDecoderWrapper[];
const char kClassPath_org_webrtc_VideoDecoderWrapper[] =
    "org/webrtc/VideoDecoderWrapper";

// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_webrtc_VideoDecoderWrapper_clazz = 0;
#ifndef org_webrtc_VideoDecoderWrapper_clazz_defined
#define org_webrtc_VideoDecoderWrapper_clazz_defined
inline jclass org_webrtc_VideoDecoderWrapper_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_webrtc_VideoDecoderWrapper,
      &g_org_webrtc_VideoDecoderWrapper_clazz);
}
#endif

// Step 2: method stubs.

static void JNI_VideoDecoderWrapper_OnDecodedFrame(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jlong nativeDecoder,
    const base::android::JavaParamRef<jobject>& frame,
    const base::android::JavaParamRef<jobject>& decodeTimeMs,
    const base::android::JavaParamRef<jobject>& qp)
{}

JNI_GENERATOR_EXPORT void
    Java_org_webrtc_VideoDecoderWrapper_nativeOnDecodedFrame(JNIEnv* env, jclass
    jcaller,
    jlong nativeDecoder,
    jobject frame,
    jobject decodeTimeMs,
    jobject qp) {
  return JNI_VideoDecoderWrapper_OnDecodedFrame(env,
      base::android::JavaParamRef<jclass>(env, jcaller), nativeDecoder,
      base::android::JavaParamRef<jobject>(env, frame),
      base::android::JavaParamRef<jobject>(env, decodeTimeMs),
      base::android::JavaParamRef<jobject>(env, qp));
}

static base::subtle::AtomicWord
    g_org_webrtc_VideoDecoderWrapper_createDecoderCallback = 0;
static base::android::ScopedJavaLocalRef<jobject>
    Java_VideoDecoderWrapper_createDecoderCallback(JNIEnv* env, jlong
    nativeDecoder) {
  CHECK_CLAZZ(env, org_webrtc_VideoDecoderWrapper_clazz(env),
      org_webrtc_VideoDecoderWrapper_clazz(env), NULL);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, org_webrtc_VideoDecoderWrapper_clazz(env),
      "createDecoderCallback",
"("
"J"
")"
"Lorg/webrtc/VideoDecoder$Callback;",
      &g_org_webrtc_VideoDecoderWrapper_createDecoderCallback);

  jobject ret =
      env->CallStaticObjectMethod(org_webrtc_VideoDecoderWrapper_clazz(env),
          method_id, nativeDecoder);
  jni_generator::CheckException(env);
  return base::android::ScopedJavaLocalRef<jobject>(env, ret);
}

#endif  // org_webrtc_VideoDecoderWrapper_JNI
