// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base\android\jni_generator\jni_generator.py
// For
//     org/webrtc/VideoCodecStatus

#ifndef org_webrtc_VideoCodecStatus_JNI
#define org_webrtc_VideoCodecStatus_JNI

#include "sdk/android/src/jni/jni_generator_helper.h"

// Step 1: forward declarations.
JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_webrtc_VideoCodecStatus[];
const char kClassPath_org_webrtc_VideoCodecStatus[] =
    "org/webrtc/VideoCodecStatus";

// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_webrtc_VideoCodecStatus_clazz = 0;
#ifndef org_webrtc_VideoCodecStatus_clazz_defined
#define org_webrtc_VideoCodecStatus_clazz_defined
inline jclass org_webrtc_VideoCodecStatus_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_webrtc_VideoCodecStatus,
      &g_org_webrtc_VideoCodecStatus_clazz);
}
#endif

// Step 2: method stubs.

static base::subtle::AtomicWord g_org_webrtc_VideoCodecStatus_getNumber = 0;
static jint Java_VideoCodecStatus_getNumber(JNIEnv* env, const
    base::android::JavaRef<jobject>& obj) {
  CHECK_CLAZZ(env, obj.obj(),
      org_webrtc_VideoCodecStatus_clazz(env), 0);
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_INSTANCE>(
      env, org_webrtc_VideoCodecStatus_clazz(env),
      "getNumber",
"("
")"
"I",
      &g_org_webrtc_VideoCodecStatus_getNumber);

  jint ret =
      env->CallIntMethod(obj.obj(),
          method_id);
  jni_generator::CheckException(env);
  return ret;
}

#endif  // org_webrtc_VideoCodecStatus_JNI
