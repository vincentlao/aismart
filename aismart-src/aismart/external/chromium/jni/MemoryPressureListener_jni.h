// Copyright 2014 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_generator.py
// For
//     org/chromium/base/MemoryPressureListener

#ifndef org_chromium_base_MemoryPressureListener_JNI
#define org_chromium_base_MemoryPressureListener_JNI

#include <jni.h>

#include "base/android/jni_generator/jni_generator_helper.h"

// Step 1: forward declarations.
JNI_REGISTRATION_EXPORT extern const char
    kClassPath_org_chromium_base_MemoryPressureListener[];
const char kClassPath_org_chromium_base_MemoryPressureListener[] =
    "org/chromium/base/MemoryPressureListener";

// Leaking this jclass as we cannot use LazyInstance from some threads.
JNI_REGISTRATION_EXPORT base::subtle::AtomicWord
    g_org_chromium_base_MemoryPressureListener_clazz = 0;
#ifndef org_chromium_base_MemoryPressureListener_clazz_defined
#define org_chromium_base_MemoryPressureListener_clazz_defined
inline jclass org_chromium_base_MemoryPressureListener_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_MemoryPressureListener,
      &g_org_chromium_base_MemoryPressureListener_clazz);
}
#endif

// Step 2: method stubs.

static void JNI_MemoryPressureListener_OnMemoryPressure(JNIEnv* env, const
    base::android::JavaParamRef<jclass>& jcaller,
    jint memoryPressureType);

JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure(JNIEnv*
    env, jclass jcaller,
    jint memoryPressureType) {
  TRACE_NATIVE_EXECUTION_SCOPED("OnMemoryPressure");
  return JNI_MemoryPressureListener_OnMemoryPressure(env,
      base::android::JavaParamRef<jclass>(env, jcaller), memoryPressureType);
}

static base::subtle::AtomicWord
    g_org_chromium_base_MemoryPressureListener_registerSystemCallback = 0;
static void Java_MemoryPressureListener_registerSystemCallback(JNIEnv* env) {
  CHECK_CLAZZ(env, org_chromium_base_MemoryPressureListener_clazz(env),
      org_chromium_base_MemoryPressureListener_clazz(env));
  jmethodID method_id =
      base::android::MethodID::LazyGet<
      base::android::MethodID::TYPE_STATIC>(
      env, org_chromium_base_MemoryPressureListener_clazz(env),
      "registerSystemCallback",
"("
")"
"V",
      &g_org_chromium_base_MemoryPressureListener_registerSystemCallback);

env->CallStaticVoidMethod(org_chromium_base_MemoryPressureListener_clazz(env),
          method_id);
  jni_generator::CheckException(env);
}

#endif  // org_chromium_base_MemoryPressureListener_JNI
