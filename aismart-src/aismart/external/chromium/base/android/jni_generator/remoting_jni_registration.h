// Copyright 2017 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

// This file is autogenerated by
//     base/android/jni_generator/jni_registration_generator.py
// Please do not change its content.

#ifndef HEADER_GUARD
#define HEADER_GUARD

#include <jni.h>

#include "base/android/jni_generator/jni_generator_helper.h"
#include "base/android/jni_int_wrapper.h"

// Step 1: Forward declaration.
extern const char kClassPath_org_chromium_base_AnimationFrameTimeHistogram[];

extern base::subtle::AtomicWord
    g_org_chromium_base_AnimationFrameTimeHistogram_clazz;
#ifndef org_chromium_base_AnimationFrameTimeHistogram_clazz_defined
#define org_chromium_base_AnimationFrameTimeHistogram_clazz_defined
inline jclass org_chromium_base_AnimationFrameTimeHistogram_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_AnimationFrameTimeHistogram,
      &g_org_chromium_base_AnimationFrameTimeHistogram_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_ApplicationStatus[];

extern base::subtle::AtomicWord g_org_chromium_base_ApplicationStatus_clazz;
#ifndef org_chromium_base_ApplicationStatus_clazz_defined
#define org_chromium_base_ApplicationStatus_clazz_defined
inline jclass org_chromium_base_ApplicationStatus_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_ApplicationStatus,
      &g_org_chromium_base_ApplicationStatus_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_CommandLine[];

extern base::subtle::AtomicWord g_org_chromium_base_CommandLine_clazz;
#ifndef org_chromium_base_CommandLine_clazz_defined
#define org_chromium_base_CommandLine_clazz_defined
inline jclass org_chromium_base_CommandLine_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_CommandLine,
      &g_org_chromium_base_CommandLine_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_CpuFeatures[];

extern base::subtle::AtomicWord g_org_chromium_base_CpuFeatures_clazz;
#ifndef org_chromium_base_CpuFeatures_clazz_defined
#define org_chromium_base_CpuFeatures_clazz_defined
inline jclass org_chromium_base_CpuFeatures_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_CpuFeatures,
      &g_org_chromium_base_CpuFeatures_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_EarlyTraceEvent[];

extern base::subtle::AtomicWord g_org_chromium_base_EarlyTraceEvent_clazz;
#ifndef org_chromium_base_EarlyTraceEvent_clazz_defined
#define org_chromium_base_EarlyTraceEvent_clazz_defined
inline jclass org_chromium_base_EarlyTraceEvent_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_EarlyTraceEvent,
      &g_org_chromium_base_EarlyTraceEvent_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_FieldTrialList[];

extern base::subtle::AtomicWord g_org_chromium_base_FieldTrialList_clazz;
#ifndef org_chromium_base_FieldTrialList_clazz_defined
#define org_chromium_base_FieldTrialList_clazz_defined
inline jclass org_chromium_base_FieldTrialList_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_FieldTrialList,
      &g_org_chromium_base_FieldTrialList_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_ImportantFileWriterAndroid[];

extern base::subtle::AtomicWord
    g_org_chromium_base_ImportantFileWriterAndroid_clazz;
#ifndef org_chromium_base_ImportantFileWriterAndroid_clazz_defined
#define org_chromium_base_ImportantFileWriterAndroid_clazz_defined
inline jclass org_chromium_base_ImportantFileWriterAndroid_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_ImportantFileWriterAndroid,
      &g_org_chromium_base_ImportantFileWriterAndroid_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_JavaExceptionReporter[];

extern base::subtle::AtomicWord g_org_chromium_base_JavaExceptionReporter_clazz;
#ifndef org_chromium_base_JavaExceptionReporter_clazz_defined
#define org_chromium_base_JavaExceptionReporter_clazz_defined
inline jclass org_chromium_base_JavaExceptionReporter_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_JavaExceptionReporter,
      &g_org_chromium_base_JavaExceptionReporter_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_JavaHandlerThread[];

extern base::subtle::AtomicWord g_org_chromium_base_JavaHandlerThread_clazz;
#ifndef org_chromium_base_JavaHandlerThread_clazz_defined
#define org_chromium_base_JavaHandlerThread_clazz_defined
inline jclass org_chromium_base_JavaHandlerThread_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_JavaHandlerThread,
      &g_org_chromium_base_JavaHandlerThread_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_MemoryPressureListener[];

extern base::subtle::AtomicWord
    g_org_chromium_base_MemoryPressureListener_clazz;
#ifndef org_chromium_base_MemoryPressureListener_clazz_defined
#define org_chromium_base_MemoryPressureListener_clazz_defined
inline jclass org_chromium_base_MemoryPressureListener_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_MemoryPressureListener,
      &g_org_chromium_base_MemoryPressureListener_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_PathService[];

extern base::subtle::AtomicWord g_org_chromium_base_PathService_clazz;
#ifndef org_chromium_base_PathService_clazz_defined
#define org_chromium_base_PathService_clazz_defined
inline jclass org_chromium_base_PathService_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_PathService,
      &g_org_chromium_base_PathService_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_PowerMonitor[];

extern base::subtle::AtomicWord g_org_chromium_base_PowerMonitor_clazz;
#ifndef org_chromium_base_PowerMonitor_clazz_defined
#define org_chromium_base_PowerMonitor_clazz_defined
inline jclass org_chromium_base_PowerMonitor_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_PowerMonitor,
      &g_org_chromium_base_PowerMonitor_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_SysUtils[];

extern base::subtle::AtomicWord g_org_chromium_base_SysUtils_clazz;
#ifndef org_chromium_base_SysUtils_clazz_defined
#define org_chromium_base_SysUtils_clazz_defined
inline jclass org_chromium_base_SysUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_base_SysUtils,
      &g_org_chromium_base_SysUtils_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_SystemMessageHandler[];

extern base::subtle::AtomicWord g_org_chromium_base_SystemMessageHandler_clazz;
#ifndef org_chromium_base_SystemMessageHandler_clazz_defined
#define org_chromium_base_SystemMessageHandler_clazz_defined
inline jclass org_chromium_base_SystemMessageHandler_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_SystemMessageHandler,
      &g_org_chromium_base_SystemMessageHandler_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_TimeUtils[];

extern base::subtle::AtomicWord g_org_chromium_base_TimeUtils_clazz;
#ifndef org_chromium_base_TimeUtils_clazz_defined
#define org_chromium_base_TimeUtils_clazz_defined
inline jclass org_chromium_base_TimeUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_TimeUtils,
      &g_org_chromium_base_TimeUtils_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_TraceEvent[];

extern base::subtle::AtomicWord g_org_chromium_base_TraceEvent_clazz;
#ifndef org_chromium_base_TraceEvent_clazz_defined
#define org_chromium_base_TraceEvent_clazz_defined
inline jclass org_chromium_base_TraceEvent_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_TraceEvent,
      &g_org_chromium_base_TraceEvent_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_library_1loader_LibraryLoader[];

extern base::subtle::AtomicWord
    g_org_chromium_base_library_1loader_LibraryLoader_clazz;
#ifndef org_chromium_base_library_1loader_LibraryLoader_clazz_defined
#define org_chromium_base_library_1loader_LibraryLoader_clazz_defined
inline jclass org_chromium_base_library_1loader_LibraryLoader_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_library_1loader_LibraryLoader,
      &g_org_chromium_base_library_1loader_LibraryLoader_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_metrics_RecordHistogram[];

extern base::subtle::AtomicWord
    g_org_chromium_base_metrics_RecordHistogram_clazz;
#ifndef org_chromium_base_metrics_RecordHistogram_clazz_defined
#define org_chromium_base_metrics_RecordHistogram_clazz_defined
inline jclass org_chromium_base_metrics_RecordHistogram_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_metrics_RecordHistogram,
      &g_org_chromium_base_metrics_RecordHistogram_clazz);
}
#endif
extern const char kClassPath_org_chromium_base_metrics_RecordUserAction[];

extern base::subtle::AtomicWord
    g_org_chromium_base_metrics_RecordUserAction_clazz;
#ifndef org_chromium_base_metrics_RecordUserAction_clazz_defined
#define org_chromium_base_metrics_RecordUserAction_clazz_defined
inline jclass org_chromium_base_metrics_RecordUserAction_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_metrics_RecordUserAction,
      &g_org_chromium_base_metrics_RecordUserAction_clazz);
}
#endif
extern const char
    kClassPath_org_chromium_base_metrics_StatisticsRecorderAndroid[];

extern base::subtle::AtomicWord
    g_org_chromium_base_metrics_StatisticsRecorderAndroid_clazz;
#ifndef org_chromium_base_metrics_StatisticsRecorderAndroid_clazz_defined
#define org_chromium_base_metrics_StatisticsRecorderAndroid_clazz_defined
inline jclass org_chromium_base_metrics_StatisticsRecorderAndroid_clazz(JNIEnv*
    env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_metrics_StatisticsRecorderAndroid,
      &g_org_chromium_base_metrics_StatisticsRecorderAndroid_clazz);
}
#endif
extern const char
    kClassPath_org_chromium_base_process_1launcher_ChildProcessService[];

extern base::subtle::AtomicWord
    g_org_chromium_base_process_1launcher_ChildProcessService_clazz;
#ifndef org_chromium_base_process_1launcher_ChildProcessService_clazz_defined
#define org_chromium_base_process_1launcher_ChildProcessService_clazz_defined
inline jclass
    org_chromium_base_process_1launcher_ChildProcessService_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_base_process_1launcher_ChildProcessService,
      &g_org_chromium_base_process_1launcher_ChildProcessService_clazz);
}
#endif
extern const char kClassPath_org_chromium_net_GURLUtils[];

extern base::subtle::AtomicWord g_org_chromium_net_GURLUtils_clazz;
#ifndef org_chromium_net_GURLUtils_clazz_defined
#define org_chromium_net_GURLUtils_clazz_defined
inline jclass org_chromium_net_GURLUtils_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_net_GURLUtils,
      &g_org_chromium_net_GURLUtils_clazz);
}
#endif
extern const char kClassPath_org_chromium_net_HttpNegotiateAuthenticator[];

extern base::subtle::AtomicWord
    g_org_chromium_net_HttpNegotiateAuthenticator_clazz;
#ifndef org_chromium_net_HttpNegotiateAuthenticator_clazz_defined
#define org_chromium_net_HttpNegotiateAuthenticator_clazz_defined
inline jclass org_chromium_net_HttpNegotiateAuthenticator_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_net_HttpNegotiateAuthenticator,
      &g_org_chromium_net_HttpNegotiateAuthenticator_clazz);
}
#endif
extern const char kClassPath_org_chromium_net_NetworkChangeNotifier[];

extern base::subtle::AtomicWord g_org_chromium_net_NetworkChangeNotifier_clazz;
#ifndef org_chromium_net_NetworkChangeNotifier_clazz_defined
#define org_chromium_net_NetworkChangeNotifier_clazz_defined
inline jclass org_chromium_net_NetworkChangeNotifier_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_net_NetworkChangeNotifier,
      &g_org_chromium_net_NetworkChangeNotifier_clazz);
}
#endif
extern const char kClassPath_org_chromium_net_ProxyChangeListener[];

extern base::subtle::AtomicWord g_org_chromium_net_ProxyChangeListener_clazz;
#ifndef org_chromium_net_ProxyChangeListener_clazz_defined
#define org_chromium_net_ProxyChangeListener_clazz_defined
inline jclass org_chromium_net_ProxyChangeListener_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_net_ProxyChangeListener,
      &g_org_chromium_net_ProxyChangeListener_clazz);
}
#endif
extern const char kClassPath_org_chromium_net_X509Util[];

extern base::subtle::AtomicWord g_org_chromium_net_X509Util_clazz;
#ifndef org_chromium_net_X509Util_clazz_defined
#define org_chromium_net_X509Util_clazz_defined
inline jclass org_chromium_net_X509Util_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env, kClassPath_org_chromium_net_X509Util,
      &g_org_chromium_net_X509Util_clazz);
}
#endif
extern const char kClassPath_org_chromium_chromoting_jni_Client[];

extern base::subtle::AtomicWord g_org_chromium_chromoting_jni_Client_clazz;
#ifndef org_chromium_chromoting_jni_Client_clazz_defined
#define org_chromium_chromoting_jni_Client_clazz_defined
inline jclass org_chromium_chromoting_jni_Client_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chromoting_jni_Client,
      &g_org_chromium_chromoting_jni_Client_clazz);
}
#endif
extern const char kClassPath_org_chromium_chromoting_jni_GlDisplay[];

extern base::subtle::AtomicWord g_org_chromium_chromoting_jni_GlDisplay_clazz;
#ifndef org_chromium_chromoting_jni_GlDisplay_clazz_defined
#define org_chromium_chromoting_jni_GlDisplay_clazz_defined
inline jclass org_chromium_chromoting_jni_GlDisplay_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chromoting_jni_GlDisplay,
      &g_org_chromium_chromoting_jni_GlDisplay_clazz);
}
#endif
extern const char kClassPath_org_chromium_chromoting_jni_JniInterface[];

extern base::subtle::AtomicWord
    g_org_chromium_chromoting_jni_JniInterface_clazz;
#ifndef org_chromium_chromoting_jni_JniInterface_clazz_defined
#define org_chromium_chromoting_jni_JniInterface_clazz_defined
inline jclass org_chromium_chromoting_jni_JniInterface_clazz(JNIEnv* env) {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chromoting_jni_JniInterface,
      &g_org_chromium_chromoting_jni_JniInterface_clazz);
}
#endif
extern const char kClassPath_org_chromium_chromoting_jni_JniOAuthTokenGetter[];

extern base::subtle::AtomicWord
    g_org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz;
#ifndef org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz_defined
#define org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz_defined
inline jclass org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz(JNIEnv* env)
    {
  return base::android::LazyGetClass(env,
      kClassPath_org_chromium_chromoting_jni_JniOAuthTokenGetter,
      &g_org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz);
}
#endif

JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_AnimationFrameTimeHistogram_nativeSaveHistogram(JNIEnv*
    env, jobject jcaller,
    jstring histogramName,
    jlongArray frameTimesMs,
    jint count);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_ApplicationStatus_nativeOnApplicationStateChange(JNIEnv*
    env, jclass jcaller,
    jint newState);
JNI_GENERATOR_EXPORT void Java_org_chromium_base_CommandLine_nativeInit(JNIEnv*
    env, jclass jcaller,
    jobjectArray args);
JNI_GENERATOR_EXPORT jboolean
    Java_org_chromium_base_CommandLine_nativeHasSwitch(JNIEnv* env, jclass
    jcaller,
    jstring switchString);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_base_CommandLine_nativeGetSwitchValue(JNIEnv* env, jclass
    jcaller,
    jstring switchString);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_CommandLine_nativeAppendSwitch(JNIEnv* env, jclass
    jcaller,
    jstring switchString);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_CommandLine_nativeAppendSwitchWithValue(JNIEnv* env,
    jclass jcaller,
    jstring switchString,
    jstring value);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_CommandLine_nativeAppendSwitchesAndArguments(JNIEnv*
    env, jclass jcaller,
    jobjectArray array);
JNI_GENERATOR_EXPORT jint
    Java_org_chromium_base_CpuFeatures_nativeGetCoreCount(JNIEnv* env, jclass
    jcaller);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_CpuFeatures_nativeGetCpuFeatures(JNIEnv* env, jclass
    jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyEvent(JNIEnv* env,
    jclass jcaller,
    jstring name,
    jlong beginTimNanos,
    jlong endTimeNanos,
    jint threadId,
    jlong threadDurationMillis);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_base_FieldTrialList_nativeFindFullName(JNIEnv* env, jclass
    jcaller,
    jstring trialName);
JNI_GENERATOR_EXPORT jboolean
    Java_org_chromium_base_FieldTrialList_nativeTrialExists(JNIEnv* env, jclass
    jcaller,
    jstring trialName);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_base_FieldTrialList_nativeGetVariationParameter(JNIEnv*
    env, jclass jcaller,
    jstring trialName,
    jstring parameterKey);
JNI_GENERATOR_EXPORT jboolean
    Java_org_chromium_base_ImportantFileWriterAndroid_nativeWriteFileAtomically(JNIEnv*
    env, jclass jcaller,
    jstring fileName,
    jbyteArray data);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaException(JNIEnv*
    env, jclass jcaller,
    jboolean crashAfterReport,
    jthrowable e);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaStackTrace(JNIEnv*
    env, jclass jcaller,
    jstring stackTrace);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_JavaHandlerThread_nativeInitializeThread(JNIEnv* env,
    jobject jcaller,
    jlong nativeJavaHandlerThread,
    jlong nativeEvent);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_JavaHandlerThread_nativeStopThread(JNIEnv* env,
    jobject jcaller,
    jlong nativeJavaHandlerThread);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_JavaHandlerThread_nativeOnLooperStopped(JNIEnv* env,
    jobject jcaller,
    jlong nativeJavaHandlerThread);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure(JNIEnv*
    env, jclass jcaller,
    jint memoryPressureType);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_PathService_nativeOverride(JNIEnv* env, jclass
    jcaller,
    jint what,
    jstring path);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_PowerMonitor_nativeOnBatteryChargingChanged(JNIEnv*
    env, jclass jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_SysUtils_nativeLogPageFaultCountToTracing(JNIEnv*
    env, jclass jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_SystemMessageHandler_nativeDoRunLoopOnce(JNIEnv* env,
    jobject jcaller,
    jlong nativeMessagePumpForUI,
    jboolean delayed);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_SystemMessageHandler_nativeDoIdleWork(JNIEnv* env,
    jobject jcaller,
    jlong nativeMessagePumpForUI);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_TimeUtils_nativeGetTimeTicksNowUs(JNIEnv* env, jclass
    jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeRegisterEnabledObserver(JNIEnv* env,
    jclass jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeStartATrace(JNIEnv* env, jclass
    jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeStopATrace(JNIEnv* env, jclass
    jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeInstant(JNIEnv* env, jclass jcaller,
    jstring name,
    jstring arg);
JNI_GENERATOR_EXPORT void Java_org_chromium_base_TraceEvent_nativeBegin(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jstring arg);
JNI_GENERATOR_EXPORT void Java_org_chromium_base_TraceEvent_nativeEnd(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jstring arg);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeBeginToplevel(JNIEnv* env, jclass
    jcaller,
    jstring target);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeEndToplevel(JNIEnv* env, jclass
    jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeStartAsync(JNIEnv* env, jclass
    jcaller,
    jstring name,
    jlong id);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_TraceEvent_nativeFinishAsync(JNIEnv* env, jclass
    jcaller,
    jstring name,
    jlong id);
JNI_GENERATOR_EXPORT jboolean
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeLibraryLoaded(JNIEnv*
    env, jobject jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordChromiumAndroidLinkerBrowserHistogram(JNIEnv*
    env, jobject jcaller,
    jboolean isUsingBrowserSharedRelros,
    jboolean loadAtFixedAddressFailed,
    jint libraryLoadFromApkStatus,
    jlong libraryLoadTime);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordLibraryPreloaderBrowserHistogram(JNIEnv*
    env, jobject jcaller,
    jint status);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterChromiumAndroidLinkerRendererHistogram(JNIEnv*
    env, jobject jcaller,
    jboolean requestedSharedRelro,
    jboolean loadAtFixedAddressFailed,
    jlong libraryLoadTime);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterLibraryPreloaderRendererHistogram(JNIEnv*
    env, jobject jcaller,
    jint status);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeGetVersionNumber(JNIEnv*
    env, jobject jcaller);
JNI_GENERATOR_EXPORT jboolean
    Java_org_chromium_base_library_1loader_LibraryLoader_nativeForkAndPrefetchNativeLibrary(JNIEnv*
    env, jclass jcaller);
JNI_GENERATOR_EXPORT jint
    Java_org_chromium_base_library_1loader_LibraryLoader_nativePercentageOfResidentNativeLibraryCode(JNIEnv*
    env, jclass jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_library_1loader_LibraryLoader_nativePeriodicallyCollectResidency(JNIEnv*
    env, jclass jcaller);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomTimesHistogramMilliseconds(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jlong key,
    jint duration,
    jint min,
    jint max,
    jint numBuckets);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordHistogram_nativeRecordBooleanHistogram(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jlong key,
    jboolean sample);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordHistogram_nativeRecordEnumeratedHistogram(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jlong key,
    jint sample,
    jint boundary);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomCountHistogram(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jlong key,
    jint sample,
    jint min,
    jint max,
    jint numBuckets);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordHistogram_nativeRecordLinearCountHistogram(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jlong key,
    jint sample,
    jint min,
    jint max,
    jint numBuckets);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordHistogram_nativeRecordSparseHistogram(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jlong key,
    jint sample);
JNI_GENERATOR_EXPORT jint
    Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramValueCountForTesting(JNIEnv*
    env, jclass jcaller,
    jstring name,
    jint sample);
JNI_GENERATOR_EXPORT jint
    Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramTotalCountForTesting(JNIEnv*
    env, jclass jcaller,
    jstring name);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_metrics_RecordUserAction_nativeRecordUserAction(JNIEnv*
    env, jclass jcaller,
    jstring action);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_base_metrics_RecordUserAction_nativeAddActionCallbackForTesting(JNIEnv*
    env, jclass jcaller,
    jobject callback);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_metrics_RecordUserAction_nativeRemoveActionCallbackForTesting(JNIEnv*
    env, jclass jcaller,
    jlong callbackId);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_base_metrics_StatisticsRecorderAndroid_nativeToJson(JNIEnv*
    env, jclass jcaller,
    jint verbosityLevel);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_process_1launcher_ChildProcessService_nativeRegisterFileDescriptors(JNIEnv*
    env, jclass jcaller,
    jobjectArray keys,
    jintArray id,
    jintArray fd,
    jlongArray offset,
    jlongArray size);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_base_process_1launcher_ChildProcessService_nativeExitChildProcess(JNIEnv*
    env, jclass jcaller);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_net_GURLUtils_nativeGetOrigin(JNIEnv* env, jclass jcaller,
    jstring url);
JNI_GENERATOR_EXPORT jstring
    Java_org_chromium_net_GURLUtils_nativeGetScheme(JNIEnv* env, jclass jcaller,
    jstring url);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_HttpNegotiateAuthenticator_nativeSetResult(JNIEnv*
    env, jobject jcaller,
    jlong nativeJavaNegotiateResultWrapper,
    jint status,
    jstring authToken);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jint newConnectionType,
    jlong defaultNetId);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyMaxBandwidthChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jint subType);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkConnect(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jlong netId,
    jint connectionType);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkSoonToDisconnect(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jlong netId);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkDisconnect(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jlong netId);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyPurgeActiveNetworkList(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jlongArray activeNetIds);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChangedTo(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr,
    jstring host,
    jint port,
    jstring pacUrl,
    jobjectArray exclusionList);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativePtr);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_net_X509Util_nativeNotifyKeyChainChanged(JNIEnv* env,
    jclass jcaller);
JNI_GENERATOR_EXPORT jlong
    Java_org_chromium_chromoting_jni_Client_nativeInit(JNIEnv* env, jobject
    jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeDestroy(JNIEnv* env, jobject
    jcaller,
    jlong nativeJniClient);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeConnect(JNIEnv* env, jobject
    jcaller,
    jlong nativeJniClient,
    jstring username,
    jstring authToken,
    jstring hostJid,
    jstring hostId,
    jstring hostPubkey,
    jstring pairId,
    jstring pairSecret,
    jstring capabilities,
    jstring flags,
    jstring hostVersion,
    jstring hostOs,
    jstring hostOsVersion);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeAuthenticationResponse(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniClient,
    jstring pin,
    jboolean createPair,
    jstring deviceName);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeDisconnect(JNIEnv* env,
    jobject jcaller,
    jlong nativeJniClient);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeOnThirdPartyTokenFetched(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniClient,
    jstring token,
    jstring sharedSecret);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeSendMouseEvent(JNIEnv* env,
    jobject jcaller,
    jlong nativeJniClient,
    jint x,
    jint y,
    jint whichButton,
    jboolean buttonDown);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeSendMouseWheelEvent(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniClient,
    jint deltaX,
    jint deltaY);
JNI_GENERATOR_EXPORT jboolean
    Java_org_chromium_chromoting_jni_Client_nativeSendKeyEvent(JNIEnv* env,
    jobject jcaller,
    jlong nativeJniClient,
    jint scanCode,
    jint keyCode,
    jboolean keyDown);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeSendTextEvent(JNIEnv* env,
    jobject jcaller,
    jlong nativeJniClient,
    jstring text);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeSendTouchEvent(JNIEnv* env,
    jobject jcaller,
    jlong nativeJniClient,
    jint eventType,
    jobjectArray data);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeEnableVideoChannel(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniClient,
    jboolean enable);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_Client_nativeSendExtensionMessage(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniClient,
    jstring type,
    jstring data);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnSurfaceCreated(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler,
    jobject surface);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnSurfaceChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler,
    jint width,
    jint height);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnSurfaceDestroyed(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnPixelTransformationChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler,
    jfloatArray matrix);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnCursorPixelPositionChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler,
    jfloat x,
    jfloat y);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnCursorInputFeedback(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler,
    jfloat x,
    jfloat y,
    jfloat diameter);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_GlDisplay_nativeOnCursorVisibilityChanged(JNIEnv*
    env, jobject jcaller,
    jlong nativeJniGlDisplayHandler,
    jboolean visible);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_JniInterface_nativeLoadNative(JNIEnv* env,
    jclass jcaller);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_JniInterface_nativeOnAuthTokenFetched(JNIEnv*
    env, jclass jcaller,
    jstring token);
JNI_GENERATOR_EXPORT void
    Java_org_chromium_chromoting_jni_JniOAuthTokenGetter_nativeResolveOAuthTokenCallback(JNIEnv*
    env, jclass jcaller,
    jlong callbackPtr,
    jint status,
    jstring userEmail,
    jstring accessToken);

// Step 2: Method declarations.

static const JNINativeMethod
    kMethods_org_chromium_base_AnimationFrameTimeHistogram[] = {
    { "nativeSaveHistogram",
"("
"Ljava/lang/String;"
"[J"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_AnimationFrameTimeHistogram_nativeSaveHistogram)
    },
};
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_ApplicationStatus[] = {
    { "nativeOnApplicationStateChange",
"("
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_ApplicationStatus_nativeOnApplicationStateChange)
    },
};
}  // namespace android
}  // namespace base

static const JNINativeMethod kMethods_org_chromium_base_CommandLine[] = {
    { "nativeInit",
"("
"[Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_CommandLine_nativeInit) },
    { "nativeHasSwitch",
"("
"Ljava/lang/String;"
")"
"Z", reinterpret_cast<void*>(Java_org_chromium_base_CommandLine_nativeHasSwitch)
    },
    { "nativeGetSwitchValue",
"("
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_base_CommandLine_nativeGetSwitchValue)
    },
    { "nativeAppendSwitch",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_CommandLine_nativeAppendSwitch)
    },
    { "nativeAppendSwitchWithValue",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_CommandLine_nativeAppendSwitchWithValue)
    },
    { "nativeAppendSwitchesAndArguments",
"("
"[Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_CommandLine_nativeAppendSwitchesAndArguments)
    },
};
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_CpuFeatures[] = {
    { "nativeGetCoreCount",
"("
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_base_CpuFeatures_nativeGetCoreCount)
    },
    { "nativeGetCpuFeatures",
"("
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_CpuFeatures_nativeGetCpuFeatures)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_EarlyTraceEvent[] = {
    { "nativeRecordEarlyEvent",
"("
"Ljava/lang/String;"
"J"
"J"
"I"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_EarlyTraceEvent_nativeRecordEarlyEvent)
    },
};
}  // namespace android
}  // namespace base

static const JNINativeMethod kMethods_org_chromium_base_FieldTrialList[] = {
    { "nativeFindFullName",
"("
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_base_FieldTrialList_nativeFindFullName)
    },
    { "nativeTrialExists",
"("
"Ljava/lang/String;"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_base_FieldTrialList_nativeTrialExists)
    },
    { "nativeGetVariationParameter",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_base_FieldTrialList_nativeGetVariationParameter)
    },
};
namespace base {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_base_ImportantFileWriterAndroid[] = {
    { "nativeWriteFileAtomically",
"("
"Ljava/lang/String;"
"[B"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_base_ImportantFileWriterAndroid_nativeWriteFileAtomically)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_JavaExceptionReporter[]
    = {
    { "nativeReportJavaException",
"("
"Z"
"Ljava/lang/Throwable;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaException)
    },
    { "nativeReportJavaStackTrace",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_JavaExceptionReporter_nativeReportJavaStackTrace)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_JavaHandlerThread[] = {
    { "nativeInitializeThread",
"("
"J"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_JavaHandlerThread_nativeInitializeThread)
    },
    { "nativeStopThread",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_JavaHandlerThread_nativeStopThread)
    },
    { "nativeOnLooperStopped",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_JavaHandlerThread_nativeOnLooperStopped)
    },
};
}  // namespace android
}  // namespace base

static const JNINativeMethod kMethods_org_chromium_base_MemoryPressureListener[]
    = {
    { "nativeOnMemoryPressure",
"("
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_MemoryPressureListener_nativeOnMemoryPressure)
    },
};
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_PathService[] = {
    { "nativeOverride",
"("
"I"
"Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_PathService_nativeOverride)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_PowerMonitor[] = {
    { "nativeOnBatteryChargingChanged",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_PowerMonitor_nativeOnBatteryChargingChanged)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_SysUtils[] = {
    { "nativeLogPageFaultCountToTracing",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_SysUtils_nativeLogPageFaultCountToTracing)
    },
};
}  // namespace android
}  // namespace base
namespace base {
static const JNINativeMethod kMethods_org_chromium_base_SystemMessageHandler[] =
    {
    { "nativeDoRunLoopOnce",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_SystemMessageHandler_nativeDoRunLoopOnce)
    },
    { "nativeDoIdleWork",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_SystemMessageHandler_nativeDoIdleWork)
    },
};
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_TimeUtils[] = {
    { "nativeGetTimeTicksNowUs",
"("
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_TimeUtils_nativeGetTimeTicksNowUs)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod kMethods_org_chromium_base_TraceEvent[] = {
    { "nativeRegisterEnabledObserver",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeRegisterEnabledObserver)
    },
    { "nativeStartATrace",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeStartATrace)
    },
    { "nativeStopATrace",
"("
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeStopATrace)
    },
    { "nativeInstant",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeInstant) },
    { "nativeBegin",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeBegin) },
    { "nativeEnd",
"("
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeEnd) },
    { "nativeBeginToplevel",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeBeginToplevel)
    },
    { "nativeEndToplevel",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeEndToplevel)
    },
    { "nativeStartAsync",
"("
"Ljava/lang/String;"
"J"
")"
"V", reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeStartAsync)
    },
    { "nativeFinishAsync",
"("
"Ljava/lang/String;"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_TraceEvent_nativeFinishAsync)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_base_library_1loader_LibraryLoader[] = {
    { "nativeLibraryLoaded",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeLibraryLoaded)
    },
    { "nativeRecordChromiumAndroidLinkerBrowserHistogram",
"("
"Z"
"Z"
"I"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordChromiumAndroidLinkerBrowserHistogram)
    },
    { "nativeRecordLibraryPreloaderBrowserHistogram",
"("
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeRecordLibraryPreloaderBrowserHistogram)
    },
    { "nativeRegisterChromiumAndroidLinkerRendererHistogram",
"("
"Z"
"Z"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterChromiumAndroidLinkerRendererHistogram)
    },
    { "nativeRegisterLibraryPreloaderRendererHistogram",
"("
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeRegisterLibraryPreloaderRendererHistogram)
    },
    { "nativeGetVersionNumber",
"("
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeGetVersionNumber)
    },
    { "nativeForkAndPrefetchNativeLibrary",
"("
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativeForkAndPrefetchNativeLibrary)
    },
    { "nativePercentageOfResidentNativeLibraryCode",
"("
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativePercentageOfResidentNativeLibraryCode)
    },
    { "nativePeriodicallyCollectResidency",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_library_1loader_LibraryLoader_nativePeriodicallyCollectResidency)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_base_metrics_RecordHistogram[] = {
    { "nativeRecordCustomTimesHistogramMilliseconds",
"("
"Ljava/lang/String;"
"J"
"I"
"I"
"I"
"I"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomTimesHistogramMilliseconds)
    },
    { "nativeRecordBooleanHistogram",
"("
"Ljava/lang/String;"
"J"
"Z"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeRecordBooleanHistogram)
    },
    { "nativeRecordEnumeratedHistogram",
"("
"Ljava/lang/String;"
"J"
"I"
"I"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeRecordEnumeratedHistogram)
    },
    { "nativeRecordCustomCountHistogram",
"("
"Ljava/lang/String;"
"J"
"I"
"I"
"I"
"I"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeRecordCustomCountHistogram)
    },
    { "nativeRecordLinearCountHistogram",
"("
"Ljava/lang/String;"
"J"
"I"
"I"
"I"
"I"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeRecordLinearCountHistogram)
    },
    { "nativeRecordSparseHistogram",
"("
"Ljava/lang/String;"
"J"
"I"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeRecordSparseHistogram)
    },
    { "nativeGetHistogramValueCountForTesting",
"("
"Ljava/lang/String;"
"I"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramValueCountForTesting)
    },
    { "nativeGetHistogramTotalCountForTesting",
"("
"Ljava/lang/String;"
")"
"I",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordHistogram_nativeGetHistogramTotalCountForTesting)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_base_metrics_RecordUserAction[] = {
    { "nativeRecordUserAction",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordUserAction_nativeRecordUserAction)
    },
    { "nativeAddActionCallbackForTesting",
"("
"Lorg/chromium/base/metrics/RecordUserAction$UserActionCallback;"
")"
"J",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordUserAction_nativeAddActionCallbackForTesting)
    },
    { "nativeRemoveActionCallbackForTesting",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_RecordUserAction_nativeRemoveActionCallbackForTesting)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_base_metrics_StatisticsRecorderAndroid[] = {
    { "nativeToJson",
"("
"I"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_base_metrics_StatisticsRecorderAndroid_nativeToJson)
    },
};
}  // namespace android
}  // namespace base
namespace base {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_base_process_1launcher_ChildProcessService[] = {
    { "nativeRegisterFileDescriptors",
"("
"[Ljava/lang/String;"
"[I"
"[I"
"[J"
"[J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_process_1launcher_ChildProcessService_nativeRegisterFileDescriptors)
    },
    { "nativeExitChildProcess",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_base_process_1launcher_ChildProcessService_nativeExitChildProcess)
    },
};
}  // namespace android
}  // namespace base
namespace net {
static const JNINativeMethod kMethods_org_chromium_net_GURLUtils[] = {
    { "nativeGetOrigin",
"("
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_net_GURLUtils_nativeGetOrigin) },
    { "nativeGetScheme",
"("
"Ljava/lang/String;"
")"
"Ljava/lang/String;",
    reinterpret_cast<void*>(Java_org_chromium_net_GURLUtils_nativeGetScheme) },
};
}  // namespace net
namespace net {
namespace android {
static const JNINativeMethod
    kMethods_org_chromium_net_HttpNegotiateAuthenticator[] = {
    { "nativeSetResult",
"("
"J"
"I"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_HttpNegotiateAuthenticator_nativeSetResult)
    },
};
}  // namespace android
}  // namespace net
namespace net {
static const JNINativeMethod kMethods_org_chromium_net_NetworkChangeNotifier[] =
    {
    { "nativeNotifyConnectionTypeChanged",
"("
"J"
"I"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyConnectionTypeChanged)
    },
    { "nativeNotifyMaxBandwidthChanged",
"("
"J"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyMaxBandwidthChanged)
    },
    { "nativeNotifyOfNetworkConnect",
"("
"J"
"J"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkConnect)
    },
    { "nativeNotifyOfNetworkSoonToDisconnect",
"("
"J"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkSoonToDisconnect)
    },
    { "nativeNotifyOfNetworkDisconnect",
"("
"J"
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyOfNetworkDisconnect)
    },
    { "nativeNotifyPurgeActiveNetworkList",
"("
"J"
"[J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_NetworkChangeNotifier_nativeNotifyPurgeActiveNetworkList)
    },
};
}  // namespace net
namespace net {
static const JNINativeMethod kMethods_org_chromium_net_ProxyChangeListener[] = {
    { "nativeProxySettingsChangedTo",
"("
"J"
"Ljava/lang/String;"
"I"
"Ljava/lang/String;"
"[Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChangedTo)
    },
    { "nativeProxySettingsChanged",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_ProxyChangeListener_nativeProxySettingsChanged)
    },
};
}  // namespace net
namespace net {
static const JNINativeMethod kMethods_org_chromium_net_X509Util[] = {
    { "nativeNotifyKeyChainChanged",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_net_X509Util_nativeNotifyKeyChainChanged)
    },
};
}  // namespace net
namespace remoting {
static const JNINativeMethod kMethods_org_chromium_chromoting_jni_Client[] = {
    { "nativeInit",
"("
")"
"J", reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeInit)
    },
    { "nativeDestroy",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeDestroy)
    },
    { "nativeConnect",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeConnect)
    },
    { "nativeAuthenticationResponse",
"("
"J"
"Ljava/lang/String;"
"Z"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeAuthenticationResponse)
    },
    { "nativeDisconnect",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeDisconnect)
    },
    { "nativeOnThirdPartyTokenFetched",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeOnThirdPartyTokenFetched)
    },
    { "nativeSendMouseEvent",
"("
"J"
"I"
"I"
"I"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeSendMouseEvent)
    },
    { "nativeSendMouseWheelEvent",
"("
"J"
"I"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeSendMouseWheelEvent)
    },
    { "nativeSendKeyEvent",
"("
"J"
"I"
"I"
"Z"
")"
"Z",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeSendKeyEvent)
    },
    { "nativeSendTextEvent",
"("
"J"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeSendTextEvent)
    },
    { "nativeSendTouchEvent",
"("
"J"
"I"
"[Lorg/chromium/chromoting/jni/TouchEventData;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeSendTouchEvent)
    },
    { "nativeEnableVideoChannel",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeEnableVideoChannel)
    },
    { "nativeSendExtensionMessage",
"("
"J"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_Client_nativeSendExtensionMessage)
    },
};
}  // namespace remoting
namespace remoting {
static const JNINativeMethod kMethods_org_chromium_chromoting_jni_GlDisplay[] =
    {
    { "nativeOnSurfaceCreated",
"("
"J"
"Landroid/view/Surface;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnSurfaceCreated)
    },
    { "nativeOnSurfaceChanged",
"("
"J"
"I"
"I"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnSurfaceChanged)
    },
    { "nativeOnSurfaceDestroyed",
"("
"J"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnSurfaceDestroyed)
    },
    { "nativeOnPixelTransformationChanged",
"("
"J"
"[F"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnPixelTransformationChanged)
    },
    { "nativeOnCursorPixelPositionChanged",
"("
"J"
"F"
"F"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnCursorPixelPositionChanged)
    },
    { "nativeOnCursorInputFeedback",
"("
"J"
"F"
"F"
"F"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnCursorInputFeedback)
    },
    { "nativeOnCursorVisibilityChanged",
"("
"J"
"Z"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_GlDisplay_nativeOnCursorVisibilityChanged)
    },
};
}  // namespace remoting
namespace remoting {
static const JNINativeMethod kMethods_org_chromium_chromoting_jni_JniInterface[]
    = {
    { "nativeLoadNative",
"("
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_JniInterface_nativeLoadNative)
    },
    { "nativeOnAuthTokenFetched",
"("
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_JniInterface_nativeOnAuthTokenFetched)
    },
};
}  // namespace remoting
namespace remoting {
static const JNINativeMethod
    kMethods_org_chromium_chromoting_jni_JniOAuthTokenGetter[] = {
    { "nativeResolveOAuthTokenCallback",
"("
"J"
"I"
"Ljava/lang/String;"
"Ljava/lang/String;"
")"
"V",
    reinterpret_cast<void*>(Java_org_chromium_chromoting_jni_JniOAuthTokenGetter_nativeResolveOAuthTokenCallback)
    },
};
}  // namespace remoting

JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_AnimationFrameTimeHistogram(JNIEnv* env) {

  const int kMethods_org_chromium_base_AnimationFrameTimeHistogramSize =
      arraysize(kMethods_org_chromium_base_AnimationFrameTimeHistogram);

  if
      (env->RegisterNatives(org_chromium_base_AnimationFrameTimeHistogram_clazz(env),
kMethods_org_chromium_base_AnimationFrameTimeHistogram,
kMethods_org_chromium_base_AnimationFrameTimeHistogramSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_AnimationFrameTimeHistogram_clazz(env),
            __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_ApplicationStatus(JNIEnv* env) {

  const int kMethods_org_chromium_base_ApplicationStatusSize =
      arraysize(base::android::kMethods_org_chromium_base_ApplicationStatus);

  if (env->RegisterNatives(org_chromium_base_ApplicationStatus_clazz(env),
base::android::kMethods_org_chromium_base_ApplicationStatus,
                           kMethods_org_chromium_base_ApplicationStatusSize) <
                               0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_ApplicationStatus_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_CommandLine(JNIEnv* env) {

  const int kMethods_org_chromium_base_CommandLineSize =
      arraysize(kMethods_org_chromium_base_CommandLine);

  if (env->RegisterNatives(org_chromium_base_CommandLine_clazz(env),
                           kMethods_org_chromium_base_CommandLine,
                           kMethods_org_chromium_base_CommandLineSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_CommandLine_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_CpuFeatures(JNIEnv* env) {

  const int kMethods_org_chromium_base_CpuFeaturesSize =
      arraysize(base::android::kMethods_org_chromium_base_CpuFeatures);

  if (env->RegisterNatives(org_chromium_base_CpuFeatures_clazz(env),
base::android::kMethods_org_chromium_base_CpuFeatures,
                           kMethods_org_chromium_base_CpuFeaturesSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_CpuFeatures_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_EarlyTraceEvent(JNIEnv* env) {

  const int kMethods_org_chromium_base_EarlyTraceEventSize =
      arraysize(base::android::kMethods_org_chromium_base_EarlyTraceEvent);

  if (env->RegisterNatives(org_chromium_base_EarlyTraceEvent_clazz(env),
base::android::kMethods_org_chromium_base_EarlyTraceEvent,
                           kMethods_org_chromium_base_EarlyTraceEventSize) < 0)
                               {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_EarlyTraceEvent_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_FieldTrialList(JNIEnv* env) {

  const int kMethods_org_chromium_base_FieldTrialListSize =
      arraysize(kMethods_org_chromium_base_FieldTrialList);

  if (env->RegisterNatives(org_chromium_base_FieldTrialList_clazz(env),
                           kMethods_org_chromium_base_FieldTrialList,
                           kMethods_org_chromium_base_FieldTrialListSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_FieldTrialList_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_ImportantFileWriterAndroid(JNIEnv* env) {

  const int kMethods_org_chromium_base_ImportantFileWriterAndroidSize =
arraysize(base::android::kMethods_org_chromium_base_ImportantFileWriterAndroid);

  if
      (env->RegisterNatives(org_chromium_base_ImportantFileWriterAndroid_clazz(env),
base::android::kMethods_org_chromium_base_ImportantFileWriterAndroid,
kMethods_org_chromium_base_ImportantFileWriterAndroidSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_ImportantFileWriterAndroid_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_JavaExceptionReporter(JNIEnv* env) {

  const int kMethods_org_chromium_base_JavaExceptionReporterSize =
arraysize(base::android::kMethods_org_chromium_base_JavaExceptionReporter);

  if (env->RegisterNatives(org_chromium_base_JavaExceptionReporter_clazz(env),
base::android::kMethods_org_chromium_base_JavaExceptionReporter,
                           kMethods_org_chromium_base_JavaExceptionReporterSize)
                               < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_JavaExceptionReporter_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_JavaHandlerThread(JNIEnv* env) {

  const int kMethods_org_chromium_base_JavaHandlerThreadSize =
      arraysize(base::android::kMethods_org_chromium_base_JavaHandlerThread);

  if (env->RegisterNatives(org_chromium_base_JavaHandlerThread_clazz(env),
base::android::kMethods_org_chromium_base_JavaHandlerThread,
                           kMethods_org_chromium_base_JavaHandlerThreadSize) <
                               0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_JavaHandlerThread_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_MemoryPressureListener(JNIEnv* env) {

  const int kMethods_org_chromium_base_MemoryPressureListenerSize =
      arraysize(kMethods_org_chromium_base_MemoryPressureListener);

  if (env->RegisterNatives(org_chromium_base_MemoryPressureListener_clazz(env),
                           kMethods_org_chromium_base_MemoryPressureListener,
kMethods_org_chromium_base_MemoryPressureListenerSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_MemoryPressureListener_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_PathService(JNIEnv* env) {

  const int kMethods_org_chromium_base_PathServiceSize =
      arraysize(base::android::kMethods_org_chromium_base_PathService);

  if (env->RegisterNatives(org_chromium_base_PathService_clazz(env),
base::android::kMethods_org_chromium_base_PathService,
                           kMethods_org_chromium_base_PathServiceSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_PathService_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_PowerMonitor(JNIEnv* env) {

  const int kMethods_org_chromium_base_PowerMonitorSize =
      arraysize(base::android::kMethods_org_chromium_base_PowerMonitor);

  if (env->RegisterNatives(org_chromium_base_PowerMonitor_clazz(env),
base::android::kMethods_org_chromium_base_PowerMonitor,
                           kMethods_org_chromium_base_PowerMonitorSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_PowerMonitor_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool RegisterNative_org_chromium_base_SysUtils(JNIEnv*
    env) {

  const int kMethods_org_chromium_base_SysUtilsSize =
      arraysize(base::android::kMethods_org_chromium_base_SysUtils);

  if (env->RegisterNatives(org_chromium_base_SysUtils_clazz(env),
                           base::android::kMethods_org_chromium_base_SysUtils,
                           kMethods_org_chromium_base_SysUtilsSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_SysUtils_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_SystemMessageHandler(JNIEnv* env) {

  const int kMethods_org_chromium_base_SystemMessageHandlerSize =
      arraysize(base::kMethods_org_chromium_base_SystemMessageHandler);

  if (env->RegisterNatives(org_chromium_base_SystemMessageHandler_clazz(env),
base::kMethods_org_chromium_base_SystemMessageHandler,
                           kMethods_org_chromium_base_SystemMessageHandlerSize)
                               < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_SystemMessageHandler_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool RegisterNative_org_chromium_base_TimeUtils(JNIEnv*
    env) {

  const int kMethods_org_chromium_base_TimeUtilsSize =
      arraysize(base::android::kMethods_org_chromium_base_TimeUtils);

  if (env->RegisterNatives(org_chromium_base_TimeUtils_clazz(env),
                           base::android::kMethods_org_chromium_base_TimeUtils,
                           kMethods_org_chromium_base_TimeUtilsSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_TimeUtils_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool RegisterNative_org_chromium_base_TraceEvent(JNIEnv*
    env) {

  const int kMethods_org_chromium_base_TraceEventSize =
      arraysize(base::android::kMethods_org_chromium_base_TraceEvent);

  if (env->RegisterNatives(org_chromium_base_TraceEvent_clazz(env),
                           base::android::kMethods_org_chromium_base_TraceEvent,
                           kMethods_org_chromium_base_TraceEventSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_TraceEvent_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_library_1loader_LibraryLoader(JNIEnv* env)
    {

  const int kMethods_org_chromium_base_library_1loader_LibraryLoaderSize =
arraysize(base::android::kMethods_org_chromium_base_library_1loader_LibraryLoader);

  if
      (env->RegisterNatives(org_chromium_base_library_1loader_LibraryLoader_clazz(env),
base::android::kMethods_org_chromium_base_library_1loader_LibraryLoader,
kMethods_org_chromium_base_library_1loader_LibraryLoaderSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_library_1loader_LibraryLoader_clazz(env),
            __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_metrics_RecordHistogram(JNIEnv* env) {

  const int kMethods_org_chromium_base_metrics_RecordHistogramSize =
arraysize(base::android::kMethods_org_chromium_base_metrics_RecordHistogram);

  if (env->RegisterNatives(org_chromium_base_metrics_RecordHistogram_clazz(env),
base::android::kMethods_org_chromium_base_metrics_RecordHistogram,
kMethods_org_chromium_base_metrics_RecordHistogramSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_metrics_RecordHistogram_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_metrics_RecordUserAction(JNIEnv* env) {

  const int kMethods_org_chromium_base_metrics_RecordUserActionSize =
arraysize(base::android::kMethods_org_chromium_base_metrics_RecordUserAction);

  if
      (env->RegisterNatives(org_chromium_base_metrics_RecordUserAction_clazz(env),
base::android::kMethods_org_chromium_base_metrics_RecordUserAction,
kMethods_org_chromium_base_metrics_RecordUserActionSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_metrics_RecordUserAction_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_metrics_StatisticsRecorderAndroid(JNIEnv*
    env) {

  const int kMethods_org_chromium_base_metrics_StatisticsRecorderAndroidSize =
arraysize(base::android::kMethods_org_chromium_base_metrics_StatisticsRecorderAndroid);

  if
      (env->RegisterNatives(org_chromium_base_metrics_StatisticsRecorderAndroid_clazz(env),
base::android::kMethods_org_chromium_base_metrics_StatisticsRecorderAndroid,
kMethods_org_chromium_base_metrics_StatisticsRecorderAndroidSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_metrics_StatisticsRecorderAndroid_clazz(env),
            __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_base_process_1launcher_ChildProcessService(JNIEnv*
    env) {

  const int kMethods_org_chromium_base_process_1launcher_ChildProcessServiceSize
      =
arraysize(base::android::kMethods_org_chromium_base_process_1launcher_ChildProcessService);

  if
      (env->RegisterNatives(org_chromium_base_process_1launcher_ChildProcessService_clazz(env),
base::android::kMethods_org_chromium_base_process_1launcher_ChildProcessService,
kMethods_org_chromium_base_process_1launcher_ChildProcessServiceSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_base_process_1launcher_ChildProcessService_clazz(env),
            __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool RegisterNative_org_chromium_net_GURLUtils(JNIEnv*
    env) {

  const int kMethods_org_chromium_net_GURLUtilsSize =
      arraysize(net::kMethods_org_chromium_net_GURLUtils);

  if (env->RegisterNatives(org_chromium_net_GURLUtils_clazz(env),
                           net::kMethods_org_chromium_net_GURLUtils,
                           kMethods_org_chromium_net_GURLUtilsSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_net_GURLUtils_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_net_HttpNegotiateAuthenticator(JNIEnv* env) {

  const int kMethods_org_chromium_net_HttpNegotiateAuthenticatorSize =
arraysize(net::android::kMethods_org_chromium_net_HttpNegotiateAuthenticator);

  if
      (env->RegisterNatives(org_chromium_net_HttpNegotiateAuthenticator_clazz(env),
net::android::kMethods_org_chromium_net_HttpNegotiateAuthenticator,
kMethods_org_chromium_net_HttpNegotiateAuthenticatorSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_net_HttpNegotiateAuthenticator_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_net_NetworkChangeNotifier(JNIEnv* env) {

  const int kMethods_org_chromium_net_NetworkChangeNotifierSize =
      arraysize(net::kMethods_org_chromium_net_NetworkChangeNotifier);

  if (env->RegisterNatives(org_chromium_net_NetworkChangeNotifier_clazz(env),
                           net::kMethods_org_chromium_net_NetworkChangeNotifier,
                           kMethods_org_chromium_net_NetworkChangeNotifierSize)
                               < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_net_NetworkChangeNotifier_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_net_ProxyChangeListener(JNIEnv* env) {

  const int kMethods_org_chromium_net_ProxyChangeListenerSize =
      arraysize(net::kMethods_org_chromium_net_ProxyChangeListener);

  if (env->RegisterNatives(org_chromium_net_ProxyChangeListener_clazz(env),
                           net::kMethods_org_chromium_net_ProxyChangeListener,
                           kMethods_org_chromium_net_ProxyChangeListenerSize) <
                               0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_net_ProxyChangeListener_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool RegisterNative_org_chromium_net_X509Util(JNIEnv*
    env) {

  const int kMethods_org_chromium_net_X509UtilSize =
      arraysize(net::kMethods_org_chromium_net_X509Util);

  if (env->RegisterNatives(org_chromium_net_X509Util_clazz(env),
                           net::kMethods_org_chromium_net_X509Util,
                           kMethods_org_chromium_net_X509UtilSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_net_X509Util_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_chromoting_jni_Client(JNIEnv* env) {

  const int kMethods_org_chromium_chromoting_jni_ClientSize =
      arraysize(remoting::kMethods_org_chromium_chromoting_jni_Client);

  if (env->RegisterNatives(org_chromium_chromoting_jni_Client_clazz(env),
remoting::kMethods_org_chromium_chromoting_jni_Client,
                           kMethods_org_chromium_chromoting_jni_ClientSize) < 0)
                               {
    jni_generator::HandleRegistrationError(
        env, org_chromium_chromoting_jni_Client_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_chromoting_jni_GlDisplay(JNIEnv* env) {

  const int kMethods_org_chromium_chromoting_jni_GlDisplaySize =
      arraysize(remoting::kMethods_org_chromium_chromoting_jni_GlDisplay);

  if (env->RegisterNatives(org_chromium_chromoting_jni_GlDisplay_clazz(env),
remoting::kMethods_org_chromium_chromoting_jni_GlDisplay,
                           kMethods_org_chromium_chromoting_jni_GlDisplaySize) <
                               0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_chromoting_jni_GlDisplay_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_chromoting_jni_JniInterface(JNIEnv* env) {

  const int kMethods_org_chromium_chromoting_jni_JniInterfaceSize =
      arraysize(remoting::kMethods_org_chromium_chromoting_jni_JniInterface);

  if (env->RegisterNatives(org_chromium_chromoting_jni_JniInterface_clazz(env),
remoting::kMethods_org_chromium_chromoting_jni_JniInterface,
kMethods_org_chromium_chromoting_jni_JniInterfaceSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_chromoting_jni_JniInterface_clazz(env), __FILE__);
    return false;
  }

  return true;
}
JNI_REGISTRATION_EXPORT bool
    RegisterNative_org_chromium_chromoting_jni_JniOAuthTokenGetter(JNIEnv* env)
    {

  const int kMethods_org_chromium_chromoting_jni_JniOAuthTokenGetterSize =
arraysize(remoting::kMethods_org_chromium_chromoting_jni_JniOAuthTokenGetter);

  if
      (env->RegisterNatives(org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz(env),
remoting::kMethods_org_chromium_chromoting_jni_JniOAuthTokenGetter,
kMethods_org_chromium_chromoting_jni_JniOAuthTokenGetterSize) < 0) {
    jni_generator::HandleRegistrationError(
        env, org_chromium_chromoting_jni_JniOAuthTokenGetter_clazz(env),
            __FILE__);
    return false;
  }

  return true;
}

// Step 3: Main dex and non-main dex registration functions.

bool RegisterMainDexNatives(JNIEnv* env) {

if (!RegisterNative_org_chromium_base_AnimationFrameTimeHistogram(env))
  return false;

if (!RegisterNative_org_chromium_base_ApplicationStatus(env))
  return false;

if (!RegisterNative_org_chromium_base_CommandLine(env))
  return false;

if (!RegisterNative_org_chromium_base_EarlyTraceEvent(env))
  return false;

if (!RegisterNative_org_chromium_base_FieldTrialList(env))
  return false;

if (!RegisterNative_org_chromium_base_JavaExceptionReporter(env))
  return false;

if (!RegisterNative_org_chromium_base_MemoryPressureListener(env))
  return false;

if (!RegisterNative_org_chromium_base_SystemMessageHandler(env))
  return false;

if (!RegisterNative_org_chromium_base_TimeUtils(env))
  return false;

if (!RegisterNative_org_chromium_base_TraceEvent(env))
  return false;

if (!RegisterNative_org_chromium_base_library_1loader_LibraryLoader(env))
  return false;

if (!RegisterNative_org_chromium_base_metrics_RecordHistogram(env))
  return false;

if
    (!RegisterNative_org_chromium_base_process_1launcher_ChildProcessService(env))
  return false;

  return true;
}

bool RegisterNonMainDexNatives(JNIEnv* env) {

if (!RegisterNative_org_chromium_base_CpuFeatures(env))
  return false;

if (!RegisterNative_org_chromium_base_ImportantFileWriterAndroid(env))
  return false;

if (!RegisterNative_org_chromium_base_JavaHandlerThread(env))
  return false;

if (!RegisterNative_org_chromium_base_PathService(env))
  return false;

if (!RegisterNative_org_chromium_base_PowerMonitor(env))
  return false;

if (!RegisterNative_org_chromium_base_SysUtils(env))
  return false;

if (!RegisterNative_org_chromium_base_metrics_RecordUserAction(env))
  return false;

if (!RegisterNative_org_chromium_base_metrics_StatisticsRecorderAndroid(env))
  return false;

if (!RegisterNative_org_chromium_net_GURLUtils(env))
  return false;

if (!RegisterNative_org_chromium_net_HttpNegotiateAuthenticator(env))
  return false;

if (!RegisterNative_org_chromium_net_NetworkChangeNotifier(env))
  return false;

if (!RegisterNative_org_chromium_net_ProxyChangeListener(env))
  return false;

if (!RegisterNative_org_chromium_net_X509Util(env))
  return false;

if (!RegisterNative_org_chromium_chromoting_jni_Client(env))
  return false;

if (!RegisterNative_org_chromium_chromoting_jni_GlDisplay(env))
  return false;

if (!RegisterNative_org_chromium_chromoting_jni_JniInterface(env))
  return false;

if (!RegisterNative_org_chromium_chromoting_jni_JniOAuthTokenGetter(env))
  return false;

  return true;
}

#endif  // HEADER_GUARD
